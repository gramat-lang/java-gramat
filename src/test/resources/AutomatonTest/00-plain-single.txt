title: alternation

expression:
    main = 'a'|'b'|'c'

automaton:
    ->1
    1->2 : 'a'
    1->3 : 'b'
    1->4 : 'c'
    2<=
    3<=
    4<=

pass: a
pass: b
pass: c
fail: x
----------
title: option

expression:
    main = ['a']

automaton:
    ->1
    1->2 : 'a'
    1<=
    2<=

pass: a
pass:
fail: x
----------
title: repeat

expression:
    main = {+'a'}

automaton:
    ->1
    1->2 : 'a'
    2->2 : 'a'
    2<=

pass: aaa
pass: aa
pass: a
fail:
fail: x
----------
title: repeat with separator

expression:
    main = {+'a'/'b'}

automaton:
    ->1
    1->2 : 'a'
    2->3 : 'b'
    3->2 : 'a'
    2<=

pass: a
pass: aba
pass: ababa
pass: abababa
fail:
fail: x
fail: ab
fail: abab
fail: ababab
----------
title: sequence

expression:
    main = "a" "b" "c"

automaton:
    ->1
    1->2 : 'a'
    2->3 : 'b'
    3->4 : 'c'
    4<=

pass: abc
fail:
fail: a
fail: ab
fail: abb
fail: abcd
fail: x
----------
title: literal

expression:
    main = "a"

automaton:
    ->1
    1->2 : 'a'
    2<=

pass: a
fail:
fail: x
fail: aa
----------