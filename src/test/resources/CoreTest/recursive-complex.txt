title: basic JSON-like

expression:
    Value = Array|Token|Object
    Object = <map: "(" { <put: <key:Token> "=" Value> / "," } ")">
    Array = <list: "[" { Value / "," } "]">
    Token = <value: "x">
    main = Value

automaton:
    ->1
    1->15 : push(Object-3)\
    map-begin()\
    '('
    1->2 : push(Array-1)\
    list-begin()\
    '['
    1->14 : value-begin()\
    'x'\
    value-end()
    2->12 : ']' / Array-1\
    list-end()\
    pop(Array-1)
    2->5 : push(Object-2)\
    map-begin()\
    '('
    2->2 : push(Array-1)\
    list-begin()\
    '['
    2->3 : value-begin()\
    'x'\
    value-end()
    3->12 : ']' / Array-1\
    list-end()\
    pop(Array-1)
    3->4 : '\,'
    4->5 : push(Object-2)\
    map-begin()\
    '('
    4->2 : push(Array-1)\
    list-begin()\
    '['
    4->3 : value-begin()\
    'x'\
    value-end()
    5->9 : ')' / Object-2\
    map-end()\
    pop(Object-2)
    5->6 : put-begin()\
    key-begin()\
    value-begin()\
    'x'\
    value-end()\
    key-end()
    6->7 : '='
    7->5 : push(Object-2)\
    map-begin()\
    '('
    7->2 : push(Array-1)\
    list-begin()\
    '['
    7->8 : value-begin()\
    'x'\
    value-end()\
    put-end()
    8->9 : ')' / Object-2\
    map-end()\
    pop(Object-2)
    8->13 : '\,'
    9->9 : ')' / Object-2\
    map-end()\
    pop(Object-2)
    9->12 : ']' / Array-1\
    list-end()\
    pop(Array-1)
    9->10 : '\,'
    10->5 : push(Object-2)\
    map-begin()\
    '('
    10->2 : push(Array-1)\
    list-begin()\
    '['
    10->11 : put-begin()\
    key-begin()\
    value-begin()\
    'x'\
    value-end()\
    key-end()
    11->12 : ']' / Array-1\
    list-end()\
    pop(Array-1)
    11->4 : '\,'
    11->7 : '='
    12->9 : ')' / Object-2\
    map-end()\
    pop(Object-2)
    12->12 : ']' / Array-1\
    list-end()\
    pop(Array-1)
    12->10 : '\,'
    13->6 : put-begin()\
    key-begin()\
    value-begin()\
    'x'\
    value-end()\
    key-end()
    15->24 : ')' / Object-3\
    map-end()\
    pop(Object-3)
    15->16 : put-begin()\
    key-begin()\
    value-begin()\
    'x'\
    value-end()\
    key-end()
    16->17 : '='
    17->15 : push(Object-3)\
    map-begin()\
    '('
    17->18 : push(Array-4)\
    list-begin()\
    '['
    17->25 : value-begin()\
    'x'\
    value-end()\
    put-end()
    18->21 : ']' / Array-4\
    list-end()\
    pop(Array-4)\
    put-end()
    18->15 : push(Object-3)\
    map-begin()\
    '('
    18->18 : push(Array-4)\
    list-begin()\
    '['
    18->19 : value-begin()\
    'x'\
    value-end()
    19->21 : ']' / Array-4\
    list-end()\
    pop(Array-4)\
    put-end()
    19->20 : '\,'
    20->15 : push(Object-3)\
    map-begin()\
    '('
    20->18 : push(Array-4)\
    list-begin()\
    '['
    20->19 : value-begin()\
    'x'\
    value-end()
    21->24 : ')' / Object-3\
    map-end()\
    pop(Object-3)
    21->21 : ']' / Array-4\
    list-end()\
    pop(Array-4)\
    put-end()
    21->22 : '\,'
    22->15 : push(Object-3)\
    map-begin()\
    '('
    22->18 : push(Array-4)\
    list-begin()\
    '['
    22->23 : put-begin()\
    key-begin()\
    value-begin()\
    'x'\
    value-end()\
    key-end()
    23->21 : ']' / Array-4\
    list-end()\
    pop(Array-4)\
    put-end()
    23->20 : '\,'
    23->17 : '='
    24->24 : ')' / Object-3\
    map-end()\
    pop(Object-3)
    24->21 : ']' / Array-4\
    list-end()\
    pop(Array-4)\
    put-end()
    24->22 : '\,'
    25->24 : ')' / Object-3\
    map-end()\
    pop(Object-3)
    25->26 : '\,'
    26->16 : put-begin()\
    key-begin()\
    value-begin()\
    'x'\
    value-end()\
    key-end()
    12<=
    14<=
    24<=

pass: x
pass: ()
pass: (x=x)
pass: (x=x,x=x)
pass: (x=())
pass: (x=[],x=())
pass: (x=[x],x=[x])
pass: []
pass: [[]]
pass: [()]
pass: [x]
pass: [x,(x=x)]
pass: [x,(x=x,x=[])]
pass: [x,[[],[],[],(),(),(),x]
pass: [x,(x=x,x=[x,(x=(),x=[],x=x),x,x],x=[],x=x),x,(),[]]
fail: (x)
fail: [)
fail: (x=(x))

pass: (x=[x,x],x=(),x=[])
----------